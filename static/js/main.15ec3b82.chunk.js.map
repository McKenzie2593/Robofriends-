{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAaeA,EAXA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC7B,OACC,sBAAKC,UAAU,sDAAf,UACD,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,cACrB,gCACE,6BAAKF,IACL,4BAAIC,WCcOK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACA,8BAEKA,EAAOC,KAAK,SAACC,EAAMC,GACrB,OACC,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACbF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHbS,SCKCC,EAbG,SAAC,GAAiC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKV,UAAU,MAAf,SACD,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCCI,EARA,SAACC,GACZ,OACA,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACKJ,EAAMK,YCiBCC,E,kDAnBZ,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG3B,WACE,OAAGG,KAAKJ,MAAMC,SACH,2DAEJG,KAAKX,MAAMK,a,GAhBEQ,aCgDbC,G,wDAxCd,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAbzC,EAAKX,MAAQ,CACZlB,OAAQ,GACRK,YAAa,IAJF,E,qDAQf,WAAqB,IAAD,OAClByB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAQvC,WACE,MAA+BZ,KAAKJ,MAA5BlB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACV8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEtD,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAW,KAAhB,UACC,oBAAIA,UAAU,KAAd,2BACG,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC3B,cAAC,EAAD,UACC,cAAC,EAAD,UACF,cAAC,EAAD,CAAU1B,OAAQmC,WAPzB,6C,GA1BUM,IAAMjB,YCGTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.15ec3b82.chunk.js","sourcesContent":["import React from 'react'\n\n  const Card = ({ name, email, id }) => {\n\t return (\n\t  <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t<img alt='robots' src= {`https://robohash.org/${id}?200x200`} />\n\t\t<div>\n\t\t  <h2>{name}</h2>\n\t\t  <p>{email}</p>\n\t\t</div>\n\t  </div>\n\t);\n }\nexport default Card;","import React from 'react';\nimport Card from './Card.js';\n\nconst Cardlist = ({ robots }) => {\n return (\n\t<div>\n    { \n      robots.map ((user, i) => {\n\t   return (\n\t    <Card \n\t        key={i}\n\t        id={robots[i].id}\n          name={robots[i].name} \n          email={robots[i].email}\n          />\n        );\n       }) \n     }\n    </div>\n  );\n}\n\nexport default Cardlist;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange }) => {\n\treturn (\n\t  <div className='pa2'>\n\t\t<input \n\t\t  className='pa3 ba b--green bg-lightest-blue'\n\t\t  type='search' \n\t\t  placeholder='search robots'\n\t\t  onChange={searchChange} \n\t     />\n\t   </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n    <div style={{overflowY: 'scroll', border:'5px solid black', height:'800px' }}>\n        {props.children}\n    </div>\n  ); \n};\n\nexport default Scroll; ","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error,info) {\n        this.setState({hasError: true})\n    }\n\n      render() {\n        if(this.state.hasError) {\n            return <h1>Ooooops. That is not good</h1>\n        }\n        return this.props.children\n      }\n    }\n\n export default ErrorBoundary;   \n","import React, { component } from 'react';\nimport Cardlist from '../components/Cardlist.js';\nimport SearchBox from '../components/SearchBox.js';\nimport Scroll from '../components/Scroll.js'\nimport ErrorBoundary from '../components/ErrorBoundary.js';\nimport './App.css';\n\n\n// eslint-disable-next-line\nclass App extends React.Component {\n constructor() {\n   super()\t\n   this.state = {\t\n    robots: [],\n    searchfield: ''\n  }\n}    \n\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n   .then(response=> response.json())\n   .then(users => this.setState({ robots: users}));\n}\n\n onSearchChange = (event) => {\n   this.setState({searchfield: event.target.value})\n}\n   \n\n   render (){\n     const { robots, searchfield} = this.state\n     const filteredRobots = robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n     })\t\n     return !robots.length?\n        <h1>Loading</h1> :\n       (\n\t        <div className ='tc'>\n\t\t        <h1 className='f1'> RoboFriends </h1>\n\t            <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                 <ErrorBoundary>\n               <Cardlist robots={filteredRobots} />\n             </ErrorBoundary>\n           </Scroll>\n         </div>\n\t    );\n    }\n  }  \n\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}